{
  "comments": [
    {
      "key": {
        "uuid": "ccfb1cbc_e8574543",
        "filename": "tests/Makefile",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Is there a reason for preferring static linking, e.g. making the strace output simpler?  If so, maybe comment it.",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77e29daf_f0fc377c",
        "filename": "tests/Makefile",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Overly-broad wildcards in rm invocations worry me a bit, especially when \"make clean\" is invoked from the cross-compiling part.  Could you limit this to only deleting files that we know about, like $(TESTS:\u003d_test)?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6ba8d46_47d3fd61",
        "filename": "tests/Makefile",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "This is linking as well as compiling, isn\u0027t it?",
      "range": {
        "startLine": 71,
        "startChar": 62,
        "endLine": 71,
        "endChar": 76
      },
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c960a238_f411c02a",
        "filename": "tests/Makefile",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Where do you get these compilers from?  Are there some \"apt-get install\" invocations that you can list in README.md as suggestions for how to install them?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "943179bf_f4d841c9",
        "filename": "tests/Makefile",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "AFAIK invoking g++/clang++ is equivalent to invoking gcc/clang.  The only difference is that the former adds a few things to the link line (like libstdc++).\n\nSo could you simplify this by just always using g++?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "514fea6b_38a8aee4",
        "filename": "tests/Makefile",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Could you add a comment to explain these special cases?  Presumably these don\u0027t work for clang, but are they not caught by the compiler test above?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81fa998e_3eb33864",
        "filename": "tests/Makefile",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Why this special case?  Is this assuming the host system is x86-64?  Could you add a comment to explain this?  (Do comments work here?)",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cfbc564_ea1335e9",
        "filename": "tests/README.md",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "It looks like they test linking too?",
      "range": {
        "startLine": 45,
        "startChar": 28,
        "endLine": 45,
        "endChar": 63
      },
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f625b28_2f703ccc",
        "filename": "tests/test_skel.h",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Doing this in a header file is dodgy because other things might be #included before test_skel.h.  Can you do \"-D_GNU_SOURCE\" in the makefile instead?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9cffa6a_6c29cb6d",
        "filename": "tests/test_skel.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Are you doing this because of the way you\u0027re putting side-effecting things inside assert()?  If so, please comment it.\n\nFor the same reason as above, can you do this in the makefile instead?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9a12ef2_b4942fe0",
        "filename": "tests/test_skel.h",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "Since these definitions (from here down) aren\u0027t used in this CL, can you remove them from this CL and move them to the one where they are used, please?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19b6cc04_6f042d88",
        "filename": "tests/unlink.c",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1000264
      },
      "writtenOn": "2018-01-09T01:16:37Z",
      "side": 1,
      "message": "How about something like \"tempfile\" rather than \"foo\"?",
      "revId": "1b8e9da36bf67ef4f54d3687a47f09c70a339466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}